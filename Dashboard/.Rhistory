#changing the labels
levels(fdata)<-c("Shubham","Rahul")
print(levels(fdata))
print(fdata)
data<-c("Shubham","Rahul","Shubham","Rahul","Shubham","Rahul")
print(data)
print(is.factor(data))
fdata<-factor(data)
print(fdata)
print(is.factor(fdata))
#labels in r
print(levels(fdata))
#changing the labels
levels(fdata)<-c("Shubham","Rahul")
print(levels(fdata))
print(fdata)
data<-c("Shubham","Rahul","Shubham","Rahul","Shubham","Rahul")
print(data)
print(is.factor(data))
fdata<-factor(data)
print(fdata)
print(is.factor(fdata))
#labels in r
print(levels(fdata))
#changing the labels
levels(fdata)<-c("Shubham","Rahul")
print(levels(fdata))
print(fdata)
data<-c("Shubham","Rahul","Shubham","Rahul","Shubham","Rahul")
print(data)
print(is.factor(data))
fdata<-factor(data)
print(fdata)
print(is.factor(fdata))
#labels in r
print(levels(fdata))
#changing the labels
levels(fdata)<-c("Shubham","Rahul")
print(levels(fdata))
print(fdata)
data<-c("Shubham","Rahul","Shubham","Rahul","Shubham","Rahul")
print(data)
print(is.factor(data))
fdata<-factor(data)
print(fdata)
print(is.factor(fdata))
#labels in r
print(levels(fdata))
#changing the labels
levels(fdata)<-c("Shubham","Rahul")
print(levels(fdata))
print(fdata)
data<-c("Shubham","Rahul","Shubham","Rahul","Shubham","Rahul")
print(data)
print(is.factor(data))
fdata<-factor(data)
print(fdata)
print(is.factor(fdata))
#labels in r
print(levels(fdata))
#changing the labels
levels(fdata)<-c("Shubham","Rahul")
print(levels(fdata))
print(fdata)
data<-c("Shubham","Rahul","Shubham","Rahul","Shubham","Rahul")
print(data)
print(is.factor(data))
fdata<-factor(data)
print(fdata)
print(is.factor(fdata))
#labels in r
print(levels(fdata))
#changing the labels
levels(fdata)<-c("Shubham","Rahul")
print(levels(fdata))
print(fdata)
data<-c("Shubham","Rahul","Shubham","Rahul","Shubham","Rahul")
print(data)
print(is.factor(data))
fdata<-factor(data)
print(fdata)
print(is.factor(fdata))
#labels in r
print(levels(fdata))
#changing the labels
levels(fdata)<-c("Shubham","Rahul")
print(levels(fdata))
print(fdata)
data<-c("Shubham","Rahul","Shubham","Rahul","Shubham","Rahul")
print(data)
print(is.factor(data))
fdata<-factor(data)
print(fdata)
print(is.factor(fdata))
#labels in r
print(levels(fdata))
#changing the labels
levels(fdata)<-c("Shubham","Rahul")
print(levels(fdata))
print(fdata)
data<-c("Shubham","Rahul","Shubham","Rahul","Shubham","Rahul")
print(data)
print(is.factor(data))
fdata<-factor(data)
print(fdata)
print(is.factor(fdata))
#labels in r
print(levels(fdata))
#changing the labels
levels(fdata)<-c("Shubham","Rahul")
print(levels(fdata))
print(fdata)
data<-c("Shubham","Rahul","Shubham","Rahul","Shubham","Rahul")
print(data)
print(is.factor(data))
fdata<-factor(data)
print(fdata)
print(is.factor(fdata))
#labels in r
print(levels(fdata))
#changing the labels
levels(fdata)<-c("Shubham","Rahul")
print(levels(fdata))
print(fdata)
data<-c("Shubham","Rahul","Shubham","Rahul","Shubham","Rahul")
print(data)
print(is.factor(data))
fdata<-factor(data)
print(fdata)
print(is.factor(fdata))
#labels in r
print(levels(fdata))
#changing the labels
levels(fdata)<-c("Shubham","Rahul")
print(levels(fdata))
print(fdata)
data<-c("Shubham","Rahul","Shubham","Rahul","Shubham","Rahul")
print(data)
print(is.factor(data))
fdata<-factor(data)
print(fdata)
print(is.factor(fdata))
#labels in r
print(levels(fdata))
#changing the labels
levels(fdata)<-c("Shubham","Rahul")
print(levels(fdata))
print(fdata)
data<-c("Shubham","Rahul","Shubham","Rahul","Shubham","Rahul")
print(data)
print(is.factor(data))
fdata<-factor(data)
print(fdata)
print(is.factor(fdata))
#labels in r
print(levels(fdata))
#changing the labels
levels(fdata)<-c("Shubham","Rahul")
print(levels(fdata))
print(fdata)
data<-c("Shubham","Rahul","Shubham","Rahul","Shubham","Rahul")
print(data)
print(is.factor(data))
fdata<-factor(data)
print(fdata)
print(is.factor(fdata))
#labels in r
print(levels(fdata))
#changing the labels
levels(fdata)<-c("Shubham","Rahul")
print(levels(fdata))
print(fdata)
data<-c("Shubham","Rahul","Shubham","Rahul","Shubham","Rahul")
print(data)
print(is.factor(data))
fdata<-factor(data)
print(fdata)
print(is.factor(fdata))
#labels in r
print(levels(fdata))
#changing the labels
levels(fdata)<-c("Shubham","Rahul")
print(levels(fdata))
print(fdata)
data<-c("Shubham","Rahul","Shubham","Rahul","Shubham","Rahul")
print(data)
print(is.factor(data))
fdata<-factor(data)
print(fdata)
print(is.factor(fdata))
#labels in r
print(levels(fdata))
#changing the labels
levels(fdata)<-c("Shubham","Rahul")
print(levels(fdata))
print(fdata)
a<-c("n","s")
z<-is.factor(a)
z
z
z<-factor(a)
d<-is.factor(z)
d
r<-factor(c(a))
r
r<-factor(c(a),labels=c("d","x"))
r
z<-factor(c("North","East"))
d<-is.factor(z)
d
r<-factor(c(a),labels=c("d","x"))
r
z<-factor(c("North","East"))
d<-is.factor(z)
d
r<-factor(c(z),labels=c("d","x"))
r
z<-factor(c("North","East"))
d<-is.factor(z)
d
r<-factor((z),labels=c("d","x"))
r
data <- c("Shubham","Nishka","Arpita","Nishka","Shubham")
factor_data<- factor(data)
#Printing all elements of factor
print(factor_data)
#Change 4th element of factor with sumit
factor_data[4] <-"Arpita"
print(factor_data)
#change 4th element of factor with "Gunjan"
factor_data[4] <- "Gunjan"    # cannot assign values outside levels
print(factor_data)
#Adding the value to the level
levels(factor_data) <- c(levels(factor_data),"Gunjan")#Adding new level
factor_data[4] <- "Gunjan"
print(factor_data)
# Creating the vectors for data frame.
height <- c(132,162,152,166,139,147,122)
weight <- c(40,49,48,40,67,52,53)
gender <- c("male","male","female","female","male","female","male")
# Creating the data frame.
input_data<- data.frame(height,weight,gender)
print(input_data)
# Testing if the gender column is a factor.
print(is.factor(input_data$gender))
# Printing the gender column to see the levels.
print(input_data$gender)
a <- gl(c("CSE", "DS", "AI-ML"))
a <- gl(3,4,c("CSE", "DS", "AI-ML"))
number <- as.integer(readline(prompt="Please enter a number: "))
if (number %% 2 == 0) {
print(paste(number, "is even"))
} else {
print(paste(number, "is odd"))
}
number <- as.integer(readline(prompt="Please enter a number: "))
if (number %in% 2 == 0) {
print(paste(number, "is even"))
} else {
print(paste(number, "is odd"))
}
vowel <- readline(prompt="Please enter a character: ")
print(paste(vowel, "is a vowel"))
} else {
# check whether the input string is a vowel or not?
vowel <- readline(prompt="Please enter a character: ")
print(paste(vowel, "is a vowel"))
else
# check whether the input string is a vowel or not?
vowel <- readline(prompt="Please enter a character: ")
print(paste(vowel, "is a vowel"))
}else{
y="18"
x=switch(
y,
"9"="A",
"12"="B",
"18"="C",
"21"="D"
)
print(x)
a=5
b=7
if(a<b){
print(paste(a," is smaller than ",b))
print(paste("Terminated if condition"))
}else{
print(paste(a,"is greater than ",b))
print("The condition (a<b) is not satisfied")
print("Executed else condition")
}
a=8
b=7
if(a<b){
print(paste(a," is smaller than ",b))
print(paste("Terminated if condition"))
}else{
print(paste(a,"is greater than ",b))
print("The condition (a<b) is not satisfied")
print("Executed else condition")
}
vec <- c(1, 2, 3, 4, 5)
sumsq <- sum(vec^2)
print(paste("The sum of squares of the vector is", sumsq))
d1=read.csv("C:\Users\hs978\Downloads\report426.csv")
d1=read.csv("C:/Users/hs978/Downloads/report426.csv")
d1
view(d1)
d1=read.csv("C:/Users/hs978/Downloads/report426.csv")
d1
view(d1)
d1=read.csv("C:/Users/hs978/Downloads/report426.csv")
d1
View(d1)
getwd()
d1=read.csv("C:/Users/hs978/Downloads/report426.csv")
d1
View(d1)
getwd()
d1=read.csv("C:/Users/hs978/Downloads/report426.csv")
d1
View(d1)
getwd()
d1=read.csv("C:/Users/hs978/Downloads/diabetes.xlsx")
d1=read.csv("C:/Users/hs978/Downloads/diabetes.xlxs")
d1=read.csv("C:/Users/hs978/Downloads/diabetes.csv")
d1
View(d1)
getwd()
read("C:/Users/hs978/Downloads/diabetes.csv")
d1=read.csv("C:/Users/hs978/Downloads/diabetes.csv")
d1
View(d1)
getwd()
head(x)
head(d1)
class(d1)
d=read.csv("C:/Users/hs978/Downloads/diabetes.csv")
d
View(d)
getwd()
class(d)
head(d)
dim(d)
str(d)
e<-read_excel(file.choose("C:/Users/hs978/Downloads/report426.xlsx"))
e<-read_excel(file.choose("C:/Users/hs978/Downloads/report426.xlxs"))
library(readxl)
install.packages("xlsx")
library(xlsx)
library(readxl)
e<-read_excel(file.choose("C:/Users/hs978/Downloads/report426.xlsx"))
e<-read_excel(file.choose("C://Users//hs978//Downloads//report426.xlsx"))
library(readxlsx)
library(readxl)
library(xlsx)
library(readxl)
e<-read_excel(file.choose("C://Users//hs978//Downloads//report426.xlsx"))
library(xlsx)
detach("package:xlsx", unload = TRUE)
library(xlsx)
library(xlsx)
library(readxl)
library(readxl)
library(readxl)
library(readxl)
library(readxl)
e<-read_excel(file.choose())
library(readxl)
e<-read_excel(file.choose())
View(e)
d=read.csv("C:/Users/hs978/Downloads/diabetes.csv")
d
View(d)
class(d)
head(d)
dim(d)
str(d)
mean(d)
mean(d)
median(d)
tail(d)
library(readxl)
e<-read_excel(file.choose())
class(e)
head(e)
dim(e)
str(e)
tail(e)
install.packages("sqldf")
install.packages("sqldf")
library(xlsx)
library("sqldf")
students<-read.csv(file.choose())
View(students)
sqldf("select * from students")
sqldf("select count(*) from students")
sqldf("select * from students where marks>70")
sqldf("select * from students where marks<60")
sqldf("select * from students where name='Veer'")
sqldf("select DISTINCT Name students where")
install.packages("tidyr")
x<-c(NA,2,3,NA,5,6,7,NA,9)
is.na(x)
is.nan(x)
library(visdat)
data<-data.frame(x=c(1,2,3,4,5),
y=c(1,2,3,4,5),
z=c(1,2,3,4,5),
a=c('a','b','c','d','e'),
b=c(2.5,3.5,4.5,5.5,6.5),
c=c(TRUE,FALSE,TRUE,FALSE,TRUE),
d=c("2+5j","3+6j","4+7j","5+8j","6+9j")
)
vis_dat(data)
#output to be present as pdf file
pdf(file = "piechart.pdf")
install.packages("ggplot2")
library(ggplot2)
View(iris)
ggplot(data=iris)#screen will be there but no output
#so add next layer after data layer aesthetics, include axis
ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width))
p<-ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width))
p+geom_point()
install.packages("ggplot2")
library(ggplot2)
View(iris)
ggplot(data=iris)#screen will be there but no output
#so add next layer after data layer aesthetics, include axis
ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width))
p<-ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width))
p+geom_point()
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
View(iris)
ggplot(data=iris)#screen will be there but no output
#so add next layer after data layer aesthetics, include axis
ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width))
p<-ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width))
p+geom_point()
library(ggplot2)
View(iris)
ggplot(data=iris)#screen will be there but no output
#so add next layer after data layer aesthetics, include axis
ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width))
p<-ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width))
p+geom_point()
install.packages("rmarkdown")
library(ggplot2)
View(iris)
ggplot(data=iris)#screen will be there but no output
#so add next layer after data layer aesthetics, include axis
ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width))
p<-ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width))
p+geom_point()
#facet layer not mandatory all other pending layers are not mand
ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width)) +geom_point()+facet_wrap(~Species)
#satatistics layer allows u to plot statistical values
#calculated from the data
ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width))+geom_point()+facet_wrap(~Species)+geom_smooth(method="lm")
#coordinate layer: allows yot to adjust x and y axis
library(dplyr)
ggplot(filter(iris,Species=="setosa"),aes(x=Sepal.Length,y=Sepal.Width))+geom_point()+coord_cartesian()
library(ggplot2)
View(iris)
ggplot(data=iris)#screen will be there but no output
#so add next layer after data layer aesthetics, include axis
ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width))
p<-ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width))
p+geom_point()
#facet layer not mandatory all other pending layers are not mand
ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width)) +geom_point()+facet_wrap(~Species)
#satatistics layer allows u to plot statistical values
#calculated from the data
ggplot(data=iris,aes(x=Sepal.Length,y=Sepal.Width))+geom_point()+facet_wrap(~Species)+geom_smooth(method="lm")
#coordinate layer: allows yot to adjust x and y axis
library(dplyr)
ggplot(filter(iris,Species=="setosa"),aes(x=Sepal.Length,y=Sepal.Width))+geom_point()+coord_cartesian()
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
#dataset
df<-read.csv(file.choose())
df
#select colums glucose ,bloodpressure,insulin from dataset order the result by bmi in ascending and insulin in descending order and show frst 10 rows
df1 <- df[, c("glucose", "bloodpressure", "insulin", "bmi")]
df
df1 <- df[, c("glucose", "bloodpressure", "insulin", "bmi")]
df1 <- df1[order(df1$bmi, -df1$insulin), ]
df1 <- df[, c("glucose", "bloodpressure", "insulin", "bmi")]
df1 <- df[, c("glucose", "bloodpressure", "insulin", "bmi")]
shiny::runApp('C:/Users/hs978/CodeSpace/R-programming/Dashboard')
library(shine)
shinyUI(
dashboardPage(
dashboardHeader(),
dashboardSidebar(),
dashboardBody()
)
)
runApp('C:/Users/hs978/CodeSpace/R-programming/Dashboard')
library(shinydashboard)
runApp('C:/Users/hs978/CodeSpace/R-programming/Dashboard')
runApp('C:/Users/hs978/CodeSpace/R-programming/Dashboard')
install.packages("shiny")
install.packages("shiny")
install.packages("shinydashboard")
shiny::runApp('C:/Users/hs978/CodeSpace/R-programming/Dashboard')
runApp('C:/Users/hs978/CodeSpace/R-programming/Dashboard')
runApp('C:/Users/hs978/CodeSpace/R-programming/Dashboard')
